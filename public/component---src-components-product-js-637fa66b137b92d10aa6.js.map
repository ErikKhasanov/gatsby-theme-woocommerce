{"version":3,"sources":["webpack:///./src/components/addToCart.js","webpack:///./src/components/product.js"],"names":["AddToCartButton","props","onClick","e","product","qty","products","localStorage","getItem","JSON","parse","match","map","p","id","setItem","stringify","addToLocalStorage","query","Img","src","css","ProductImage","images","image","key","ProductDetail","name","price","description","Product","post","data","wcProducts","title","dangerouslySetInnerHTML","__html"],"mappings":"oiBAyBA,IAUeA,EAVS,SAAAC,GACtB,OACE,8BACE,sBAAQC,QAAS,SAAAC,GAAC,OAzBxB,SAA2BC,EAASC,QAAS,IAATA,MAAM,GACxC,IAAIC,EAAYC,aAAaC,QAAQ,QAEjCC,KAAKC,MAAMH,aAAaC,QAAQ,SADhC,GAGAG,GAAQ,EACZL,EAASM,IAAI,SAAAC,GAKX,OAJIA,EAAEC,IAAMV,EAAQU,KAClBD,EAAER,KAAOA,EACTM,GAAQ,GAEHE,IAGJF,IACHP,EAAQC,IAAMA,EACdC,EAAQ,YAAOA,GAAP,CAAiBF,KAG3BG,aAAaQ,QAAQ,OAAQN,KAAKO,UAAUV,IAMlBW,CAAkBhB,EAAMG,WAA9C,iB,2CCZC,IAAMc,EAAK,a,8DAcZC,EAAM,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACb,OACE,mBACEC,IAAG,GAOH,mBAAKD,IAAKA,MAKVE,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,OACE,8BACGA,EAAOX,IAAI,SAAAY,GAAK,OACf,YAAC,EAAD,CAAKC,IAAKD,EAAMJ,IAAKA,IAAKI,EAAMJ,U,6CAMlCM,EAAgB,SAAC,GAAsC,IAApCZ,EAAmC,EAAnCA,GAAIa,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAyB,EAAlBC,YACxC,OACE,mBACER,IAAG,GAIH,sBAAKM,GACL,+BACS,YAAC,IAAD,CAAeC,MAAOA,KAG/B,YAAC,EAAD,CAAiBxB,QAAS,CAAEU,KAAIa,OAAMC,a,gIAoC7BE,UA/BC,SAAC,GAAoC,IAAdC,EAAa,EAAjCC,KAAQC,WACzB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAOH,EAAKJ,OACjB,mBACEN,IAAG,GAKH,YAAC,EAAD,CAAcE,OAAQQ,EAAKR,SAC3B,YAAC,EAAD,CACET,GAAIiB,EAAKjB,GACTe,YAAaE,EAAKF,YAClBD,MAAOG,EAAKH,MACZD,KAAMI,EAAKJ,QAIf,8CACA,mBACEN,IAAG,EAIHc,wBAAyB,CAAEC,OAAQL,EAAKF","file":"component---src-components-product-js-637fa66b137b92d10aa6.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nfunction addToLocalStorage(product, qty = 1) {\n  let products = !localStorage.getItem(\"cart\")\n    ? []\n    : JSON.parse(localStorage.getItem(\"cart\"))\n\n  let match = false\n  products.map(p => {\n    if (p.id == product.id) {\n      p.qty += qty\n      match = true\n    }\n    return p\n  })\n\n  if (!match) {\n    product.qty = qty\n    products = [...products, product]\n  }\n\n  localStorage.setItem(\"cart\", JSON.stringify(products))\n}\n\nconst AddToCartButton = props => {\n  return (\n    <>\n      <button onClick={e => addToLocalStorage(props.product)}>\n        Add to Cart\n      </button>\n    </>\n  )\n}\n\nexport default AddToCartButton\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Layout from \"./layout\"\nimport { css } from \"@emotion/core\"\nimport SEO from \"../components/seo\"\nimport FormatedPrice from \"../components/formatedPrice\"\nimport AddToCartButton from \"./addToCart\"\nimport \"./layout.css\"\n\nexport const query = graphql`\n  query($slug: String) {\n    wcProducts(slug: { eq: $slug }) {\n      id\n      name\n      slug\n      price\n      description\n      images {\n        src\n      }\n    }\n  }\n`\nconst Img = ({ src }) => {\n  return (\n    <div\n      css={css`\n        img {\n          width: 250px;\n          max-width: 250px;\n        }\n      `}\n    >\n      <img src={src} />\n    </div>\n  )\n}\n\nconst ProductImage = ({ images }) => {\n  return (\n    <>\n      {images.map(image => (\n        <Img key={image.src} src={image.src} />\n      ))}\n    </>\n  )\n}\n\nconst ProductDetail = ({ id, name, price, description }) => {\n  return (\n    <div\n      css={css`\n        margin-left: 15px;\n      `}\n    >\n      <h2>{name}</h2>\n      <p>\n        Price: <FormatedPrice price={price} />\n      </p>\n\n      <AddToCartButton product={{ id, name, price }} />\n    </div>\n  )\n}\n\nconst Product = ({ data: { wcProducts: post } }) => {\n  return (\n    <Layout>\n      <SEO title={post.name} />\n      <div\n        css={css`\n          display: flex;\n          justify-content: \"space-between\";\n        `}\n      >\n        <ProductImage images={post.images} />\n        <ProductDetail\n          id={post.id}\n          description={post.description}\n          price={post.price}\n          name={post.name}\n        />\n      </div>\n\n      <h4>Product Description:</h4>\n      <div\n        css={css`\n          color: grey;\n          margin-top: 5px;\n        `}\n        dangerouslySetInnerHTML={{ __html: post.description }}\n      />\n    </Layout>\n  )\n}\n\nexport default Product\n"],"sourceRoot":""}