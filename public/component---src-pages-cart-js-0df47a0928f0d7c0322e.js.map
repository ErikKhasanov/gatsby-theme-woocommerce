{"version":3,"sources":["webpack:///./src/pages/cart.js","webpack:///./node_modules/core-js/modules/es6.number.parse-int.js","webpack:///./node_modules/core-js/modules/_parse-int.js"],"names":["CartItem","id","name","price","qty","removeItem","css","style","className","href","onClick","Cart","useState","cartItems","setCartItems","removeItemFromCart","updatedCartItems","filter","item","localStorage","setItem","JSON","stringify","useEffect","items","getItem","parse","total","title","map","Number","parseInt","key","$export","$parseInt","S","F","$trim","trim","ws","hex","module","exports","str","radix","string","String","test"],"mappings":"+XAOA,IAAMA,EAAW,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,WACxC,OACE,kBAAIC,IAAKC,GACP,sBAAKL,GACL,wBACA,wBACE,YAAC,IAAD,CAAeC,MAAOA,KAChB,IALV,KAMI,wBAAOC,GANX,KAMyB,IACvB,wBACE,YAAC,IAAD,CAAeD,MAAOA,EAAQC,KAEhC,qBAAOI,UAAU,aAAaC,KAAK,GAAGC,QAAS,kBAAML,EAAWJ,KAAhE,Y,0CAmDAM,EAAK,+NAkBII,UA9DF,WAAO,IAAD,EACeC,mBAAS,IAApCC,EADY,KACDC,EADC,KAajB,SAASC,EAAmBd,GAC1B,IAAIe,EAAmBH,EAAUI,OAAO,SAAAC,GAAI,OAAIA,EAAKjB,IAAMA,IAC3DkB,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,IAC5CF,EAAaE,GAbfO,oBAAU,WACR,IAAIC,EAASL,aAAaM,QAAQ,QAE9BJ,KAAKK,MAAMP,aAAaM,QAAQ,SADhC,KAGA,MAAQD,GACVV,EAAaU,IAEd,IAQH,IAAIG,EAAQ,EACZ,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,SACX,8BACA,kBACEtB,IAAG,GAIFO,EAAUgB,IAAI,SAAAX,GAEb,OADAS,GAASG,OAAOC,SAASb,EAAKf,OAASe,EAAKd,IAE1C,YAACJ,EAAD,GAAUgC,IAAKd,EAAKjB,IAAQiB,EAA5B,CAAkCb,WAAYU,QAIpD,uBACA,+BACS,YAAC,IAAD,CAAeZ,MAAOwB,Q,oBChErC,IAAIM,EAAU,EAAQ,GAClBC,EAAY,EAAQ,KAExBD,EAAQA,EAAQE,EAAIF,EAAQG,GAAKN,OAAOC,UAAYG,GAAY,SAAU,CAAEH,SAAUG,K,oBCHtF,IAAIA,EAAY,EAAQ,GAAaH,SACjCM,EAAQ,EAAQ,IAAkBC,KAClCC,EAAK,EAAQ,KACbC,EAAM,cAEVC,EAAOC,QAAmC,IAAzBR,EAAUK,EAAK,OAA0C,KAA3BL,EAAUK,EAAK,QAAiB,SAAkBI,EAAKC,GACpG,IAAIC,EAASR,EAAMS,OAAOH,GAAM,GAChC,OAAOT,EAAUW,EAASD,IAAU,IAAOJ,EAAIO,KAAKF,GAAU,GAAK,MACjEX","file":"component---src-pages-cart-js-0df47a0928f0d7c0322e.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Link } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport FormatedPrice from \"../components/formatedPrice\"\n\nconst CartItem = ({ id, name, price, qty, removeItem }) => {\n  return (\n    <li css={style}>\n      <h4>{name}</h4>\n      <div>{/* <img src={} /> */}</div>\n      <span>\n        <FormatedPrice price={price} />\n      </span>{\" \"}\n      x <span>{qty}</span> ={\" \"}\n      <span>\n        <FormatedPrice price={price * qty} />\n      </span>\n      <label className=\"removeItem\" href=\"\" onClick={() => removeItem(id)}>\n        Remove\n      </label>\n    </li>\n  )\n}\n\nconst Cart = () => {\n  let [cartItems, setCartItems] = useState([])\n\n  useEffect(() => {\n    let items = !localStorage.getItem(\"cart\")\n      ? null\n      : JSON.parse(localStorage.getItem(\"cart\"))\n\n    if (null != items) {\n      setCartItems(items)\n    }\n  }, [])\n\n  function removeItemFromCart(id) {\n    let updatedCartItems = cartItems.filter(item => item.id != id)\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCartItems))\n    setCartItems(updatedCartItems)\n  }\n\n  let total = 0\n  return (\n    <Layout>\n      <SEO title=\"Cart\" />\n      <h1>Cart</h1>\n      <ul\n        css={css`\n          margin-left: 0;\n        `}\n      >\n        {cartItems.map(item => {\n          total += Number.parseInt(item.price) * item.qty\n          return (\n            <CartItem key={item.id} {...item} removeItem={removeItemFromCart} />\n          )\n        })}\n      </ul>\n      <hr />\n      <p>\n        Total: <FormatedPrice price={total} />\n      </p>\n    </Layout>\n  )\n}\n\nconst style = css`\n  margin-bottom: 30px;\n  list-style: none;\n  font-size: 0.9rem;\n\n  .removeItem {\n    margin-left: 2rem;\n    color: grey;\n    text-decoration: underline;\n    cursor: pointer;\n  }\n\n  h4 {\n    margin-bottom: 0.5rem;\n    font-size: 20px;\n    color: hsl(270, 50%, 40%);\n  }\n`\nexport default Cart\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 20.1.2.13 Number.parseInt(string, radix)\n$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });\n","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n"],"sourceRoot":""}